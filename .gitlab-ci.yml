image: node:10

stages:
  - test
  - build
  - deploy

# This folder is cached between builds
# http://docs.gitlab.com/ce/ci/yaml/README.html#cache
cache:
  paths:
    - node_modules/

test:
  stage: test
  script:
    - npm install
    - npm run lint
    - npm test
  artifacts:
    paths:
      - coverage/
  
build:
  stage: build
  image: docker:latest
  only:
    - development
    - master
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: "overlay"
  before_script:
    - docker version
    - "docker info"
    - "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY"
  script:
    - "docker build -t ${CI_REGISTRY}/${CI_PROJECT_PATH}:${CI_COMMIT_REF_NAME} --pull ."
    - "docker push ${CI_REGISTRY}/${CI_PROJECT_PATH}:${CI_COMMIT_REF_NAME}"
  after_script:
    - "docker logout ${CI_REGISTRY}"

publish-coverage:
  stage: deploy
  dependencies:
    - test
  script:
    - mv coverage/ public/
  artifacts:
    paths:
      - public
    expire_in: 30 days
  only:
    - master

deploy:
  stage: deploy
  dependencies:
    - test
  script:
    ##
    ## Install ssh-agent if not already installed, it is required by Docker.
    ## (change apt-get to yum if you use an RPM-based image)
    ##
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'

    ##
    ## Run ssh-agent (inside the build environment)
    ##
    - eval $(ssh-agent -s)

    ##
    - ssh-keyscan $BEEFBOARD_HOST >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

    ##
    ## Create the SSH directory and give it the right permissions
    ##
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh

    # Ensure that the ssh is known
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

    - if [[ "$CI_COMMIT_REF_NAME"=="development" ]]; then SERVICE="web_beefboard-test-api"; else SERVICE="web_beefboard-api"; fi
    - command="docker service update ${SERVICE} --image ${CI_REGISTRY}/${CI_PROJECT_PATH}:${CI_COMMIT_REF_NAME} --with-registry-auth"
    - echo $command
    - ssh $DEPLOY_USER@$BEEFBOARD_HOST "$command"
  only:
    - master
    - development
  